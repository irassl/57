{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/users.module.css","components/Profile/MyPosts/MyPosts.module.css","assets/images/user.png","assets/images/preloader.svg","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Login/Login.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/HeaderContainer.jsx","App.js","index.js"],"names":["module","exports","dialogs","dialogsItems","active","messages","message","header","loginBlock","descriptionBlock","userPhoto","selectedPage","postsBlock","posts","__webpack_require__","p","item","nav","activeLink","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","API-KEY","usersAPI","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","userId","post","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","initialState","id","likesCount","newPostText","profile","setStatus","type","profileReducer","state","action","newPost","Object","objectSpread2","toConsumableArray","newText","name","dialogsReducer","body","newMessageBody","sidebarReducer","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingProgress","usersReducer","map","u","followed","count","filter","email","login","isAuth","authReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","store","createStore","applyMiddleware","thunk","Header","props","react_default","a","createElement","className","s","src","NavLink","to","Navbar","activeClassName","DialogItem","path","dialog","Message","Login","formik","useFormik","initialValues","password","rememberMe","onSubmit","values","alert","JSON","stringify","handleSubmit","assign","placeholder","getFieldProps","AddMessageForm","sendMessage","resetForm","value","Dialogs","dialogsElements","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","Dialogs_AddMessageForm","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","_React$Component","inherits","_super","createSuper","classCallCheck","this","apply","createClass","Redirect","React","connect","compose","dispatch","sendMessageCreator","Users","pagesCount","Math","ceil","pages","i","push","styles","onClick","e","onPageChanged","photos","small","disabled","some","unfollow","follow","Preloader","style","backgroundColor","preloader","UsersContainer","_this","_len","args","Array","_key","call","pageNumber","setCurrentPage","setUsers","items","getUsers","Fragment","common_Preloader_Preloader","components_Users_Users","resultCode","followSuccess","unfollowSuccess","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onStatusChange","currentTarget","prevProps","prevState","onDoubleClick","onChange","autoFocus","onBlur","ProfileInfo","ProfileInfo_ProfileStatus","Post","MyPosts","postsElements","MyPosts_Post_Post","newPostElement","createRef","text","current","updateNewPostText","ref","addPost","MyPostsContainer","updateNewPostTextActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","params","getUserProfile","components_Profile_Profile","AuthRedirectComponent","withRouter","HeaderContainer","getAuthUserData","components_Header_Header","_response$data$data","setAuthUserData","App","Header_HeaderContainer","components_Navbar_Navbar","Route","render","DialogsContainer","Profile_ProfileContainer","Users_UsersContainer","components_Login_Login","ReactDOM","BrowserRouter","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.023e4c3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1_En6\",\"selectedPage\":\"users_selectedPage__1mnwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.6c3daf60.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers:     {\n        \"API-KEY\": \"524e0318-1cf6-4d4c-b0a7-084d6b518c22\"\n    }\n});\n\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId){\n        return  instance.post(`follow/${userId}`, {})\n\n    },\n    unfollow(userId){\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method. Please profileAPI object.')\n        return profileAPI.getProfile(userId);\n    }\n}\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    }\n}\nexport const authAPI ={\n    me(){\n        return instance.get(`auth/me` )\n    }\n}\n","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    newPostText: 'it-kamasutra.com',\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS:\r\n            return {...state,\r\n                status: action.status}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus =(status)=>({type: SET_STATUS,status})\r\nexport const getUserProfile = (userId) =>(dispatch)=>{\r\n    usersAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data)) ;\r\n        });\r\n}\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        });\r\n}\r\n\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\n\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {usersAPI} from \"../api/api\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [ ],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map( u =>  {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map( u =>  {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS: {\n            return { ...state, users: action.users }\n        }\n        case SET_CURRENT_PAGE: {\n            return { ...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return { ...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return { ...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId })\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId })\nexport const setUsers = (users) => ({type: SET_USERS, users })\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\n\n\nexport const getUsers =(currentPage,pageSize)=>{\n    return (dispatch) =>{\n    dispatch(toggleIsFetching(true))\n    usersAPI.getUsers(currentPage,pageSize)\n        .then(response => {\n            dispatch(toggleIsFetching(false))\n            dispatch(setUsers(response.items)) ;\n            dispatch(setTotalUsersCount(response.items.length)) ;\n        });}\n}\nexport const follow =(userId)=>{\n    return (dispatch) =>{\n       dispatch(toggleFollowingProgress(true, userId)) ;\n        usersAPI.follow(userId)\n            .then(response => {\n                if (response.data.resultCode == 0) {\n                   dispatch(followSuccess(userId)) ;\n                }\n                 dispatch( toggleFollowingProgress(false,userId))\n            });\n}}\nexport const unfollow =(userId)=>{\n    return (dispatch) =>{\n        dispatch(toggleFollowingProgress(true, userId)) ;\n        usersAPI.unfollow(userId)\n            .then(response => {\n                if (response.data.resultCode == 0) {\n                    dispatch(unfollowSuccess(userId)) ;\n                }\n                dispatch(toggleFollowingProgress(false,userId))\n            });\n}}\nexport default usersReducer;","import {authAPI} from \"../api/api\";\n\nconst SET_USER_DATA = 'SET-USER-DATA';\n\nlet initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (id,email,login) => ({type: SET_USER_DATA, data : {id,email,login} })\nexport const getAuthUserData =() =>(dispatch)=>{\n    authAPI.me()\n        .then(response => {\n            if(response.data.resultCode === 0){\n                let {id,email,login}= response.data.data\n                 dispatch(setAuthUserData(id,email,login))\n            }\n        });\n}\n\nexport default authReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nlet store = createStore(reducers,applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth ? props.login :  <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\nimport {useFormik} from \"formik\";\n\n\nconst Login = (props)=>{\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            rememberMe: false\n        },\n        onSubmit: values => {\n            alert(JSON.stringify(values));\n\n            // formik.resetForm()\n        },\n    })\n    return <div>\n        <h1>Login</h1>\n        <form onSubmit={formik.handleSubmit}>\n            <div>\n                <input placeholder={'Login'}\n                       {...formik.getFieldProps('email')}/>\n            </div>\n            <div>\n                <input type={'password'} placeholder={'Password'}\n                       {...formik.getFieldProps('password')}/>\n            </div>\n            <div>\n                <input type={'checkbox'}\n                       {...formik.getFieldProps('rememberMe')}/> remember me\n            </div>\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n\n    </div>\n}\nexport default  Login","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport redirect from \"react-router-dom/Redirect\";\r\nimport Login from \"../Login/Login\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useFormik} from \"formik\";\r\nimport {updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n\r\n    // if(!props.isAuth ){\r\n    //     return <Redirect to={'/login'}/>\r\n    // }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n                <AddMessageForm />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst AddMessageForm=(props)=>{\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newMessageBody: '',\r\n        },\r\n        onSubmit: values => {\r\n            alert(JSON.stringify(values.newMessageBody));\r\n            props.sendMessage(values.newMessageBody)\r\n            formik.resetForm()\r\n        },\r\n    })\r\n\r\n    return(\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div><textarea value={props.newMessageBody}\r\n\r\n                           placeholder='Enter your message'\r\n                           {...formik.getFieldProps('newMessageBody')}></textarea></div>\r\n            <div><button type={'submit'} >Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login'/>\n\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from 'react';\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport {NavLink} from \"react-router-dom\";\n\n\nlet Users = (props) => {\n\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    return <div>\n        <div>\n            {pages.map(p => {\n                return <span className={props.currentPage === p && styles.selectedPage}\n                             onClick={(e) => {\n                                 props.onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        </div>\n        {\n            props.users.map(u => <div key={u.id}>\n                <span>\n                    <div>\n                       <NavLink to={'/profile/' + u.id}>\n                           <NavLink to={'/profile/' +u.id}>\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto}\n                             className={styles.userPhoto}/>\n                               </NavLink>\n                       </NavLink>\n                    </div>\n                    <div>\n                        {u.followed\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                                props.unfollow(u.id)\n                            }}>Unfollow</button>\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                                props.follow(u.id)\n                            }}>Follow</button>}\n\n                    </div>\n                </span>\n                <span>\n                    <span>\n                        <div>{u.name}</div>\n                        <div>{u.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"u.location.country\"}</div>\n                        <div>{\"u.location.city\"}</div>\n                    </span>\n                </span>\n            </div>)\n        }\n    </div>\n}\n\nexport default Users;","import React from 'react';\nimport preloader from \"../../../assets/images/preloader.svg\";\n\nlet Preloader = (props) => {\n    return <div  style={ { backgroundColor: 'white' } }>\n        <img src={preloader} />\n    </div>\n}\n\nexport default Preloader;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    follow,\n    setCurrentPage,\n    setUsers,\n    setTotalUsersCount,\n    toggleIsFetching,\n    unfollow, toggleFollowingProgress, getUsers\n} from '../../redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage,this.props.pageSize)\n        \n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.toggleIsFetching(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`, {withCredentials: true})\n            .then(response => {\n                this.props.toggleIsFetching(false);\n                this.props.setUsers(response.data.items);\n            });\n    }\n\n    render() {\n        return <>\n            { this.props.isFetching ? <Preloader /> : null }\n            <Users totalUsersCount={this.props.totalUsersCount}\n                        pageSize={this.props.pageSize}\n                        currentPage={this.props.currentPage}\n                        onPageChanged={this.onPageChanged}\n                        users={this.props.users}\n                        follow={this.props.follow}\n                        unfollow={this.props.unfollow}\n                   toggleFollowingProgress={this.props.toggleFollowingProgress}\n                   followingInProgress={this.props.followingInProgress}\n\n             />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps,{follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers })\n)(UsersContainer)","import React from 'react';\nimport s from './ProfileInfo.module.css';\n\nclass ProfileStatus extends React.Component {\n    state ={\n        editMode: false,\n        status: this.props.status\n    }\n    activateEditMode=()=>{\n        this.setState({editMode: true})\n\n    }\n    deactivateEditMode=()=>{\n        this.setState({editMode: false})\n        this.props.updateStatus(this.state.status)\n\n    }\n    onStatusChange=(e)=>{\n       this.setState({\n           status: e.currentTarget.value\n       })\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.status !== this.props.status){\n            this.setState({\n                state: this.props.status\n            })\n        }\n\n\n    }\n\n    render(){\n        return (\n            <div>\n                {!this.state.editMode &&\n                    <div>\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"no Status\"}</span>\n                    </div>\n                }\n                {this.state.editMode &&\n                    <div>\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\n                    </div>\n                }\n\n            </div>\n        )\n    }\n\n}\n\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.small} />\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={ onPostChange } ref={newPostElement}\r\n                              value={props.newPostText} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={ onAddPost }>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getUserProfile,getStatus,updateStatus} from \"../../redux/profile-reducer\";\nimport { withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = 2;\n        }\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer)\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status\n});\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus,updateStatus}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);","import s from \"./Header.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport * as axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {getAuthUserData, setAuthUserData} from \"../../redux/auth-reducer\";\nimport {authAPI} from \"../../api/api\";\n\n\nclass HeaderContainer extends React.Component{\n    componentDidMount() {\n        this.props.getAuthUserData()\n    }\n    render() {\n        return <Header {...this.props}/>\n    }\n}\nconst mapStateToProps=(state)=>({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n})\nexport default connect(mapStateToProps, {getAuthUserData}) (HeaderContainer)","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\n\nconst App = () => {\n    return (\n            <div className='app-wrapper'>\n                <HeaderContainer />\n                <Navbar />\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                           render={ () => <DialogsContainer /> }/>\n\n                    <Route path='/profile/:userId?'\n                           render={ () => <ProfileContainer /> }/>\n\n                    <Route path='/users'\n                           render={ () => <UsersContainer /> }/>\n                    <Route path='/login'\n                    render={ () => <Login /> }/>\n\n\n                </div>\n            </div>\n        )\n}\n\nexport default App;","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}